openapi: 3.0.2
info:
  title: CVE Services API
  description: The CVE services API which supports automation tooling for the CVE Project.
  termsOfService: https://placeholder.cve.mitre.org/api/terms
  contact:
    name: CVE Services API
    url: https://github.com/CVEProject/cve-services
    email: cve-board-auto-list@mitre.org
  license:
    name: Creative Commons Zero v1.0 Universal
    url: https://creativecommons.org/publicdomain/zero/1.0/legalcode
  version: 1.0.0
servers:
  - url: https://cveawg.mitre.org/api
    description: Production server
components:
  parameters:
    api-entity-header:
      in: header
      name: CVE-API-ORG
      description: The shortname for the entity (e.g., CNA, ADP) that is authenticated or requesting authentication.
      required: true
      schema:
        $ref: https://raw.githubusercontent.com/CVEProject/cve-schema/v5.0.0-rc4/schema/v5.0/CVE_JSON_5.0.schema#/definitions/shortName
    api-user-header:
      in: header
      name: CVE-API-USER
      description: The username for the account that is making the request.
      required: true
      schema:
        type: string
        # TODO: this should have a length bound
    api-secret-header:
      in: header
      name: CVE-API-KEY
      description: The user's API key.
      required: true
      schema:
        type: string
        # TODO: this should have a length bound
    cve-id-path:
      in: path
      name: cve-id
      description: The CVE ID for which the record is being submitted.
      required: true
      schema:
        $ref: https://raw.githubusercontent.com/CVEProject/cve-schema/v5.0.0-rc4/schema/v5.0/CVE_JSON_5.0.schema#/definitions/cveId
    shortname-path:
      in: path
      name: shortname
      description: The short name of the organization.
      required: true
      schema:
        $ref: https://raw.githubusercontent.com/CVEProject/cve-schema/v5.0.0-rc4/schema/v5.0/CVE_JSON_5.0.schema#/definitions/shortName
    username-path:
      in: path
      name: username
      description: The user name of the user.
      required: true
      schema:
        type: string
    page-query:
      in: query
      name: page
      description: The current page in the paginator.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
  schemas:
    cve-id:
      type: object
      properties:
        cve_id:
          type: string
          pattern: ^CVE-[0-9]{4}-[0-9]{4,}$
        cve_year:
          type: string
          pattern: ^[0-9]{4}$
        owning_cna:
          type: string
          description: The shortname for the organization that owns the CVE-ID.
        state:
          type: string
          enum: [RESERVED, PUBLISHED, REJECTED]
        requested_by:
          type: object
          properties:
            cna:
              type: string
              description: The shortname for the organization of the user that requested the ID.
            user:
              type: string
              description: The username for the account that requested the ID.
        reserved:
          type: string
          format: date-time
          description: The time the ID was reserved.
        time:
          type: object
          properties:
            created:
              type: string
              format: date-time
              description: The time the ID was created.
            modified:
              type: string
              format: date-time
              description: The last time the ID was modified.
    cve-id-no-time:
      type: object
      properties:
        cve_id:
          $ref: https://raw.githubusercontent.com/CVEProject/cve-schema/v5.0.0-rc4/schema/v5.0/CVE_JSON_5.0.schema#/definitions/cveId
        cve_year:
          type: string
          pattern: ^[0-9]{4}$
        owning_cna:
          type: string
          description: The shortname for the organization that owns the CVE-ID.
        state:
          type: string
          enum: [RESERVED, PUBLISHED, REJECTED]
        requested_by:
          type: object
          properties:
            cna:
              type: string
              description: The shortname for the organization of the user that requested the ID.
            user:
              type: string
              description: The username for the account that requested the ID.
        reserved:
          type: string
          format: date-time
          description: The time the ID was reserved.
    org:
      type: object
      properties:
        name:
          type: string
          description: The name of the organization.
        short_name:
          type: string
          description: The short name of the organization.
        UUID:
          type: string
          description: The identifier of the organization.
        policies:
          type: object
          properties:
            id_quota:
              type: integer
              format: int32
              description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.
              minimum: 0
              maximum: 100000
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the organization.
                enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
        time:
          type: object
          properties:
            created:
              type: string
              format: date-time
              description: The time the organization was created.
            modified:
              type: string
              format: date-time
              description: The last time the organization was modified.
    org-no-time:
      type: object
      properties:
        name:
          type: string
          description: The name of the organization.
        short_name:
          type: string
          description: The short name of the organization.
        UUID:
          type: string
          description: The identifier of the organization.
        policies:
          type: object
          properties:
            id_quota:
              type: integer
              format: int32
              description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the organization.
                enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
    user-no-time-secret:
      type: object
      properties:
        username:
          type: string
          description: The user name of the user.
        org_UUID:
          type: string
          description: The identifier of the organization the user belongs to.
        UUID:
          type: string
          description: The identifier of the user.
        active:
          type: boolean
          description: The user is an active user of the organization.
        name:
          type: object
          properties:
            first:
              type: string
              description: The first name of the user.
            last:
              type: string
              description: The last name of the user.
            middle:
              type: string
              description: The middle name of the user, if any.
            suffix:
              type: string
              description: The suffix of the user, if any.
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the user.
                enum: ['ADMIN']
    user:
      type: object
      properties:
        username:
          type: string
          description: The user name of the user.
        org_UUID:
          type: string
          description: The identifier of the organization the user belongs to.
        UUID:
          type: string
          description: The identifier of the user.
        active:
          type: boolean
          description: The user is an active user of the organization.
        name:
          type: object
          properties:
            first:
              type: string
              description: The first name of the user.
            last:
              type: string
              description: The last name of the user.
            middle:
              type: string
              description: The middle name of the user, if any.
            suffix:
              type: string
              description: The suffix of the user, if any.
        secret:
          type: string
          description: The API key of the user.
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the user.
                enum: ['ADMIN']
        time:
          type: object
          properties:
            created:
              type: string
              format: date-time
              description: The time the user was created.
            modified:
              type: string
              format: date-time
              description: The last time the user was modified.
    user-no-secret:
      type: object
      properties:
        username:
          type: string
          description: The user name of the user.
        org_UUID:
          type: string
          description: The identifier of the organization the user belongs to.
        UUID:
          type: string
          description: The identifier of the user.
        active:
          type: boolean
          description: The user is an active user of the organization.
        name:
          type: object
          properties:
            first:
              type: string
              description: The first name of the user.
            last:
              type: string
              description: The last name of the user.
            middle:
              type: string
              description: The middle name of the user, if any.
            suffix:
              type: string
              description: The suffix of the user, if any.
        authority:
          type: object
          properties:
            active_roles:
              type: array
              items:
                type: string
                description: The active roles of the user.
                enum: ['ADMIN']
        time:
          type: object
          properties:
            created:
              type: string
              format: date-time
              description: The time the user was created.
            modified:
              type: string
              format: date-time
              description: The last time the user was modified.
    arrayOfCveIds:
      type: array
      items:
        $ref: '#/components/schemas/cve-id'
    arrayOfCveIdsNoTime:
      type: array
      items:
        $ref: '#/components/schemas/cve-id-no-time'
    arrayOfCveRecords:
      type: array
      items:
        anyOf:
          - $ref: 'service-api-cve-schema.json#/definitions/cveRecord'
    arrayOfOrgs:
      type: array
      items:
        $ref: '#/components/schemas/org'
    arrayOfOrgsNoTime:
      type: array
      items:
        $ref: '#/components/schemas/org-no-time'
    arrayOfUsersNoSecret:
      type: array
      items:
        $ref: '#/components/schemas/user-no-secret'
    errorCveIds:
      type: object
      properties:
        error:
          type: string
          description: Error name
        message:
          type: string
          description: Error description
        details:
          type: object
          properties:
            amount_reserved:
              type: integer
              format: int32
              description: The amount of IDs that were reserved in the system.
        cve_ids:
          type: array
          items:
            $ref: '#/components/schemas/cve-id-no-time'
    errorValidator:
      type: object
      properties:
        error:
          type: string
          description: Error name
        message:
          type: string
          description: Error description
        details:
          type: object
          properties:
            errors:
              type: array
              items:
                type: string
                description: The errors encountered by the JSON validator.
    errorIdQuota:
      type: object
      properties:
        error:
          type: string
          description: Error name
        message:
          type: string
          description: Error description
        details:
          type: object
          properties:
            id_quota:
              type: integer
              format: int32
              description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.
            total_reserved:
              type: integer
              format: int32
              description: The total number of CVE IDs across all years that the organization has in the RESERVED state.
            available:
              type: integer
              format: int32
              description: The number of CVE IDs that can be reserved by the organization (e.g., id_quota - total_reserved).
    errorBadInput:
      type: object
      properties:
        error:
          type: string
          description: Error name
        message:
          type: string
          description: Error description
        details:
          type: array
          items:
            type: object
            properties:
              msg:
                type: string
                description: Invalid value
              param:
                type: string
                description: The name of the parameter with the error
              location:
                type: string
                enum: ['body', 'param', 'query']
                description: The location of the parameter
    errorGeneric:
      type: object
      properties:
        error:
          type: string
          description: Error name
        message:
          type: string
          description: Error description
paths:
  /cve-id-range/{year}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - in: path
        name: year
        description: The year of the CVE-ID-Range record.
        required: true
        schema:
          type: integer
          format: int32
    post:
      summary: Creates a CVE-ID-Range record for the specified year
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can create a CVE-ID-Range record for the specified year</p>
      operationId: cveIdRangeCreate
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: The CVE-ID-Range entity was created.
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /cve-id:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
    get:
      summary: Retrieves all CVE IDs entity owns after applying the query params
      description: |
        <h2>Access Control</h2>
        <p>No roles needed to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see CVE-IDs owned by any Organization</p>
        <p><b>Admin User:</b> Can only see CVE-IDs owned by the Organization it belongs to</p>
        <p><b>Regular User:</b> Can only see CVE-IDs owned by the Organization it belongs to</p>
      operationId: cveIdGetFiltered
      x-org-roles:
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      parameters:
        - in: query
          name: state
          description: Filter by CVE state [RESERVED, PUBLISHED, REJECTED].
          required: false
          schema:
            type: string
        - in: query
          name: cve_id_year
          description: Filter by the year in the CVE ID (YYYY).
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: time_reserved.lt
          description: Get all CVE-ID records reserved before timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: time_reserved.gt
          description: Get all CVE-ID records reserved after timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: time_modified.lt
          description: Get all CVE-ID records modified before timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: time_modified.gt
          description: Get all CVE-ID records modified after timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - $ref: '#/components/parameters/page-query'
      responses:
        200:
          description: A filtered list of CVE-ID records the organization owns given the query parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    format: int32
                    description: Total CVE records found
                  itemsPerPage:
                    type: integer
                    format: int32
                    description: Number of CVE records in a page
                  pageCount:
                    type: integer
                    format: int32
                    description: Total number of pages
                  currentPage:
                    type: integer
                    format: int32
                    description: Current page
                  prevPage:
                    type: integer
                    format: int32
                    description: Previous page
                  nextPage:
                    type: integer
                    format: int32
                    description: Next page
                  cve_ids:
                    $ref: '#/components/schemas/arrayOfCveIds'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
    post:
      summary: Reserves CVE-ID records for the organization provided in the short_name query parameter
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>CNA:</b> The user must belong to an Organization with the “CNA” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can reserve CVE-IDs for any Organization</p>
        <p><b>CNA:</b> Can only reserve CVE-IDs for its Organization</p>
      operationId: cveIdReserve
      x-org-roles:
        type: String
        enum: ['CNA']
        description: The user must belong to an Organization with the “CNA” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      parameters:
        - in: query
          name: batch_type
          description: When the amount is greater than one, it indicates whether the CVE IDs should be sequential or non-sequential.
          required: false
          schema:
            type: string
            enum: [sequential, nonsequential, non-sequential]
        - in: query
          name: amount
          description: Amount of CVE IDs to reserve.
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: cve_year
          description: The year the CVE IDs will be reserved for. (i.e., 1999, ..., currentYear + 1)
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: short_name
          description: The CNA that will own the CVE IDs reserved.
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of the newly reserved CVE-IDs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  cve_ids:
                    $ref: '#/components/schemas/arrayOfCveIdsNoTime'
        206:
          description: A partial list of the CVE-IDs the IDR service managed to reserve before encountering a case where no more CVE IDs could be reserved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorCveIds'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /cve-id/{cve-id}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/cve-id-path'
    get:
      summary: Retrieves a CVE-ID record by ID, can be a cve id the entity doesn't own if in a PUBLISHED or REJECTED state
      description: |
        <h2>Access Control</h2>
        <p>No roles needed to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see the full information of a CVE-ID owned by any Organization</p>
        <p><b>Admin User:</b> Can see full information of a CVE-ID owned by the Organization it belongs to, and can only see partial information of a CVE-ID in the “PUBLISHED” or “REJECTED” state that is owned by another Organization</p>
        <p><b>Regular User:</b> Can see full information of a CVE-ID owned by the Organization it belongs to, and can only see partial information of a CVE-ID in the “PUBLISHED” or “REJECTED” state that is owned by another Organization</p>
      operationId: cveIdGetSingle
      x-org-roles:
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: The requested CVE-ID record is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
    put:
      summary: Updates a CVE-ID record by ID
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can update a CVE-ID owned by any Organization</p>
      operationId: cveIdUpdateSingle
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      parameters:
        - in: query
          name: state
          description: Update the state of a CVE-ID record.
          required: false
          schema:
            type: string
        - in: query
          name: org
          description: Update the owning_cna of a CVE-ID record.
          required: false
          schema:
            type: string
        # TODO: missing request body
      responses:
        200:
          description: The updated CVE-ID record is returned.
          content:
            application/json:
              schema:
                type: object
                properties:      
                  message:
                    type: string
                    description: Success description
                  updated:
                    $ref: '#/components/schemas/cve-id'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /cve:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
    get:
      summary: Retrieves all CVE records
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see all CVE records owned by any Organization</p>
      operationId: cveGetFiltered
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      parameters:
        - in: query
          name: time_modified.lt
          description: Get all CVE records modified before timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: time_modified.gt
          description: Get all CVE records modified after timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: state
          description: 'Filter by CVE state. Accepted values: [PUBLISHED, REJECTED].'
          required: false
          schema:
            type: string
        - in: query
          name: count_only
          description: Get count of records that match query. Accepted values are 0 and 1, representing False and True, respectively.
          required: false
          schema:
            type: boolean
        - in: query
          name: assignerShortName
          description: Get the short name for the org to which the cve id was assigned.
          required: false
          schema:
            type: string
        - in: query
          name: assigner
          description: Get the UUID for the org to which the cve id was assigned.
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of CVE records and pagination fields, only allowed by the Secretariat.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    format: int32
                    description: Total CVE records found
                  itemsPerPage:
                    type: integer
                    format: int32
                    description: Number of CVE records in a page
                  pageCount:
                    type: integer
                    format: int32
                    description: Total number of pages
                  currentPage:
                    type: integer
                    format: int32
                    description: Current page
                  prevPage:
                    type: integer
                    format: int32
                    description: Previous page
                  nextPage:
                    type: integer
                    format: int32
                    description: Next page
                  cveRecords:
                    $ref: '#/components/schemas/arrayOfCveRecords'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /cve/{cve-id}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/cve-id-path'
    get:
      summary: Returns a CVE record by CVE ID
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see a CVE record owned by any Organization</p>
      operationId: cveGetSingle
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: The requested CVE record is returned.
          content:
            application/json:
              schema:
                $ref: service-api-cve-schema.json#/definitions/cveRecord
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
    post:
      summary: Creates a CVE Record by ID
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can create a CVE record owned by any Organization</p>
      operationId: cveSubmit
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      # TODO: missing request body
      responses:
        200:
          description: Returns the CVE record created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success description
                  created:
                    $ref: service-api-cve-schema.json#/definitions/cveRecord
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
    put:
      summary: Updates a CVE Record by ID
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can update a CVE record owned by any Organization</p>
      operationId: cveUpdateSingle
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: Returns the CVE record updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success description
                  updated:
                    $ref: service-api-cve-schema.json#/definitions/cveRecord
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /cve/{cve-id}/cna:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/cve-id-path'
    get:
      summary: Returns the CVE record's CNA container by CVE ID
      description: TODO
      operationId: unknown # TODO: add correct operation
      x-org-roles: # TODO: not sure what goes here
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles: # TODO: not sure what goes here
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: The requested CVE record is returned.
          content:
            application/json:
              schema:
                $ref: service-api-cve-schema.json#/definitions/cnaContainer
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
    post:
      summary: Creates a CVE Record by ID
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can create a CVE record owned by any Organization</p>
      description: TODO
      operationId: unknown # TODO: add correct operation
      x-org-roles: # TODO: not sure what goes here
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles: # TODO: not sure what goes here
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: service-api-cve-schema.json#/definitions/cnaContainer
      responses:
        200:
          description: Returns the CVE record created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success description
                  created:
                    $ref: service-api-cve-schema.json#/definitions/cnaContainer
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
    put:
      summary: Updates a CVE Record by ID
      description: TODO
      operationId: unknown # TODO: add correct operation
      x-org-roles: # TODO: not sure what goes here
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles: # TODO: not sure what goes here
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: service-api-cve-schema.json#/definitions/cnaContainer
      responses:
        200:
          description: Returns the CVE record updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success description
                  updated:
                    $ref: service-api-cve-schema.json#/definitions/cnaContainer
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /cve/{cve-id}/cna/rejected:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/cve-id-path'
    post:
      summary: Creates a CVE Record by ID
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can create a CVE record owned by any Organization</p>
      description: TODO
      operationId: unknown # TODO: add correct operation
      x-org-roles: # TODO: not sure what goes here
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles: # TODO: not sure what goes here
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: service-api-cve-schema.json#/definitions/rejected
      responses:
        200:
          description: Returns the CVE record created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success description
                  created:
                    $ref: service-api-cve-schema.json#/definitions/rejected
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /org:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
    get:
      summary: Retrieves all organization records
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see the information of all Organizations</p>
      operationId: orgAll
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      parameters:
        - $ref: '#/components/parameters/page-query'
      responses:
        200:
          description: Returns all organization records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    format: int32
                    description: Total CVE records found
                  itemsPerPage:
                    type: integer
                    format: int32
                    description: Number of CVE records in a page
                  pageCount:
                    type: integer
                    format: int32
                    description: Total number of pages
                  currentPage:
                    type: integer
                    format: int32
                    description: Current page
                  prevPage:
                    type: integer
                    format: int32
                    description: Previous page
                  nextPage:
                    type: integer
                    format: int32
                    description: Next page
                  organizations:
                    $ref: '#/components/schemas/arrayOfOrgs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
    post:
      summary: Creates an organization record
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can create any Organization record</p>
      operationId: orgCreateSingle
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                short_name:
                  type: string
                  description: The short name of the organization.
                name:
                  type: string
                  description: The name of the organization.
                uuid:
                  type: string
                  description: The organization identifier.
                authority:
                  type: object
                  properties:
                    active_roles:
                      type: array
                      items:
                        type: string
                        description: The active roles of the organization.
                        enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
                policies:
                  type: object
                  properties:
                    id_quota:
                      type: integer
                      format: int32
                      description: The CVE ID quota of the organization.
                      minimum: 0
                      maximum: 100000
              required:
                - short_name
                - name
      responses:
        200:
          description: Returns the organization record created.
          content:
            application/json:
              schema:
                type: object
                properties:      
                  message:
                    type: string
                    description: Success description
                  created:
                    $ref: '#/components/schemas/org'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /org/{identifier}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    get:
      summary: Retrieve an organization's data given the identifier, which can be their short name or that organization's uuid.
      description: |
        <h2>Access Control</h2>
        <p>No roles needed to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see the information of any Organization</p>
        <p><b>Admin User:</b> Can only see the information of the Organization it belongs to</p>
        <p><b>Regular User:</b> Can only see the information of the Organization it belongs to</p>
      operationId: orgSingle
      x-org-roles:
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: Returns the organization record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /org/{shortname}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    put:
      summary: Update an organization record
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can update the information of any Organization</p>
      operationId: orgUpdateSingle
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      parameters:
        - in: query
          name: shortname
          description: Update the short name of the organization.
          required: false
          schema:
            type: string
        - in: query
          name: id_quota
          description: Update the number of CVE IDs the organization is allowed to have in the RESERVED state at one time.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 100000
        - in: query
          name: name
          description: Update the name of the organization.
          required: false
          schema:
            type: string
        - in: query
          name: active_roles.add
          description: Add an active role to the organization.
          required: false
          schema:
            type: string
            enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
        - in: query
          name: active_roles.remove
          description: Remove an active role from the organization.
          required: false
          schema:
            type: string
            enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']
      responses:
        200:
          description: Returns the organization record updated.
          content:
            application/json:
              schema:
                type: object
                properties:      
                  message:
                    type: string
                    description: Success description
                  updated:
                    $ref: '#/components/schemas/org'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /org/{shortname}/users:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    get:
      summary: Retrieve all user records specified by the short name of the organization
      description: |
        <h2>Access Control</h2>
        <p>No roles needed to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see the information of all users of any Organization</p>
        <p><b>Admin User:</b> Can only see the information of users that belongs to the same Organization</p>
        <p><b>Regular User:</b> Can only see the information of users that belongs to the same Organization</p>
      operationId: userOrgAll
      x-org-roles:
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      parameters:
        - $ref: '#/components/parameters/page-query'
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    format: int32
                    description: Total user records found
                  itemsPerPage:
                    type: integer
                    format: int32
                    description: Number of user records in a page
                  pageCount:
                    type: integer
                    format: int32
                    description: Total number of pages
                  currentPage:
                    type: integer
                    format: int32
                    description: Current page
                  prevPage:
                    type: integer
                    format: int32
                    description: Previous page
                  nextPage:
                    type: integer
                    format: int32
                    description: Next page
                  users:
                    $ref: '#/components/schemas/arrayOfUsersNoSecret'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /org/{shortname}/user:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    post:
      summary: Create a user record with the provided short name as the owning organization
      description: |
        <h2>Access Control</h2>
        <p>At least one of the following roles are needed to access the endpoint:</p>
        <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>
        <p>- <b>ADMIN:</b> The user must have the “ADMIN” role and must belong to the same Organization as the new user</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can create a user record for any Organization</p>
        <p><b>Admin User:</b> Can only create a user record for users that belongs to the same Organization</p>
      operationId: userCreateSingle
      x-org-roles:
        type: String
        enum: ['SECRETARIAT']
        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint
      x-user-roles:
        type: String
        enum: ['ADMIN']
        description: The user must have the “ADMIN” role and must belong to the same Organization as the new user to access the endpoint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The user name of the user.
                org_uuid:
                  type: string
                  description: The identifier of the organization the user belongs to.
                uuid:
                  type: string
                  description: The identifier of the user.
                name:
                  type: object
                  properties:
                    first:
                      type: string
                      description: The first name of the user.
                    last:
                      type: string
                      description: The last name of the user.
                    middle:
                      type: string
                      description: The middle name of the user, if any.
                    suffix:
                      type: string
                      description: The suffix of the user, if any.
                authority:
                  type: object
                  properties:
                    active_roles:
                      type: array
                      items:
                        type: string
                        description: The active roles of the user.
                        enum: ['ADMIN']
              required:
                - username
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:      
                  message:
                    type: string
                    description: Success description
                  created:
                    $ref: '#/components/schemas/user'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /org/{shortname}/user/{username}:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
      - $ref: '#/components/parameters/username-path'
    get:
      summary: Retrieve a user record
      description: |
        <h2>Access Control</h2>
        <p>No roles needed to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see the information of a user of any Organization</p>
        <p><b>Admin User:</b> Can only see the information of a user that belongs to the same Organization</p>
        <p><b>Regular User:</b> Can only see the information of a user that belongs to the same Organization</p>
      operationId: userSingle
      x-org-roles:
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-no-secret'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
    put:
      summary: Update a user record
      operationId: userUpdateSingle
      description: |
        <h2>Access Control</h2>
        <p>No roles needed to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can update a user record for any Organization</p>
        <p><b>Admin User:</b> Can only update a user record for users that belongs to the same Organization</p>
        <p><b>Regular User:</b> Can only update its own user record</p>
      x-org-roles:
        type: String
        enum: ['']
        description: The organization can have the 'SECRETARIAT' role but it is not required to access the endpoint.
      x-user-roles:
        type: String
        enum: ['']
        description: The user can have the 'ADMIN' role but it is not required to access the endpoint.
      parameters:
        - in: query
          name: active
          description: Update the active state of the user record.
          required: false
          schema:
            type: boolean
        - in: query
          name: new_username
          description: Update the user name of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: org_shortname
          description: Update the organization the user belongs to.
          required: false
          schema:
            type: string
        - in: query
          name: name.first
          description: Update the first name of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: name.last
          description: Update the last name of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: name.middle
          description: Update the middle name of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: name.suffix
          description: Update suffix of the user record.
          required: false
          schema:
            type: string
        - in: query
          name: active_roles.add
          description: Add an active role to the user.
          required: false
          schema:
            type: string
        - in: query
          name: active_roles.remove
          description: Remove an active role from the user.
          required: false
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:      
                  message:
                    type: string
                    description: Success description
                  updated:
                    $ref: '#/components/schemas/user-no-secret'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /org/{shortname}/user/{username}/reset_secret:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
      - $ref: '#/components/parameters/username-path'
    put:
      summary: Reset the API key of the user
      description: |
        <h2>Access Control</h2>
        <p>No roles needed to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can reset the API secret of any user</p>
        <p><b>Admin User:</b> Can only reset the API secret of users that belong to the same Organization</p>
        <p><b>Regular User:</b> Can only reset its own API secret</p>
      operationId: userResetSecret
      x-org-roles:
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: Returns the new API key.
          content:
            application/json:
              schema:
                type: object
                properties:
                  API-secret:
                    type: string
                    description: The new API key of the user.
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /org/{shortname}/id_quota:
    parameters:
      - $ref: '#/components/parameters/api-entity-header'
      - $ref: '#/components/parameters/api-secret-header'
      - $ref: '#/components/parameters/api-user-header'
      - $ref: '#/components/parameters/shortname-path'
    get:
      summary: Retrieves the details about the CVE ID quota information of an organization
      description: |
        <h2>Access Control</h2>
        <p>No roles needed to access the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see the CVE ID quota information of any Organization</p>
        <p><b>Admin User:</b> Can only see the CVE ID quota information of the Organization it belongs to</p>
        <p><b>Regular User:</b> Can only see the CVE ID quota information of the Organization it belongs to</p>
      operationId: orgIdQuota
      x-org-roles:
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: No user roles needed to access the endpoint
      responses:
        200:
          description: Returns CVE ID quota details of an organization.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_quota:
                    type: integer
                    description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.
                  total_reserved:
                    type: integer
                    description: The total number of CVE IDs across all years that the organization has in the RESERVED state.
                  available:
                    type: integer
                    format: int32
                    description: The number of CVE IDs that can be reserved by the organization (e.g., id_quota - total_reserved)
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
  /users:
    parameters:
      - $ref: '#/components/parameters/api-secret-header'
    get:
      summary: Retrieve all users
      description: |
        <h2>Access Control</h2>
        <p> Only secretariat users can accesss the endpoint</p>
        <h2>Expected Behavior</h2>
        <p><b>Secretariat:</b> Can see the information of all users of any Organization</p>
      operationId: userAll
      x-org-roles:
        type: String
        enum: ['']
        description: No Organization roles needed to access the endpoint
      x-user-roles:
        type: String
        enum: ['']
        description: Secretariat user role needed to access the endpoint
      parameters:
        - $ref: '#/components/parameters/page-query'
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    format: int32
                    description: Total user records found
                  itemsPerPage:
                    type: integer
                    format: int32
                    description: Number of user records in a page
                  pageCount:
                    type: integer
                    format: int32
                    description: Total number of pages
                  currentPage:
                    type: integer
                    format: int32
                    description: Current page
                  prevPage:
                    type: integer
                    format: int32
                    description: Previous page
                  nextPage:
                    type: integer
                    format: int32
                    description: Next page
                  users:
                    $ref: '#/components/schemas/arrayOfUsersNoSecret'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorBadInput'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorGeneric'
